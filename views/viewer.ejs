<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title><%= curr.name %></title>
	<style>
		body {
			background: black;
			cursor: none;
			overflow: hidden;
			color: white;
		}
		.container {
			overflow: hidden;
		}
		img {
			display: block;
			margin: 0 auto;
			max-width: 100%;
		}
		.show-cursor {
			cursor: auto;
			overflow: auto;
		}
		a {
			color: white;
			text-decoration: none;
			background-color: #444;
		}
		a:hover,
		a.active {
			background-color: #666;
		}
		.controls {
			text-align: center;
			margin: 1em;
		}
		.controls a {
			display: inline-block;
			padding: 0.3em 0.6em;
		}
		.dirs a {
			display: block;
			padding: 0.3em 0.6em;
			margin: 0.6em 0;
		}
		.nav {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			text-align: center;
			background: #444;
			line-height: 1;
			vertical-align: middle;
		}
		.nav:hover {
			display: block;
		}
		.nav a {
			display: inline-block;
			padding: 1em;
			vertical-align: middle;
		}
		.show-cursor .nav {
			display: block;
		}
		.right {
			position: absolute;
			right: 1em;
			top: 0;
		}
		.right > a {
			float: right;
		}
		.left {
			float: left;
		}
		.notify {
			background: #444;
			padding: 1em;
			position: fixed;
			top: 2em;
			right: 2em;
			width: 16em;
			display: none;
		}
		.bookmark-menu {
			display: none;
			margin-top: 3em;
		}
		.bookmark-menu a {
			display: block;
		}
		.show {
			display: block;
		}
		@supports (-webkit-appearance:none) {
			body {
				overflow: auto;
			}
		}
	</style>
	<style id="hide-cursor-style">
		::-webkit-scrollbar {
			display: none;
		}
	</style>
	<script src="/jquery/jquery.js"></script>
	<script>
		var cv = <%- comicViewer %>,
			match;
		
		// check isfile
		if (cv.isFile) {
			location.href = "/view?path=" + encodeURIComponent(cv.curr.dir) + "#" + cv.curr.name;
		}
		
		var bookmark = function(){
			var MAX_LENGTH = 20,
				scrTop;
			
			function read() {
				var bookmarks;
				try {
					bookmarks = JSON.parse(localStorage.bookmarks);
					if (!(bookmarks instanceof Array)) {
						bookmarks = [];
					}
				} catch (err) {
					bookmarks = [];
				}
				return bookmarks;
			}
			
			function save(bookmarks) {
				localStorage.bookmarks = JSON.stringify(bookmarks);
			}
		
			function add() {
				var bookmarks = read(),
					bookmark = {
						path: cv.curr.full,
						scrTop: $(window).scrollTop(),
						name: cv.curr.name
					};
				
				bookmarks.push(bookmark);
				addMenuItem(bookmark);
				
				save(bookmarks);
				
				panel.notify("Saved bookmark: " + cv.curr.full);
			}
			
			function load() {
				var bookmarks = read(),
					last = bookmarks[bookmarks.length - 1];
					
				if (!last) {
					panel.notify("Bookmark is empty");
				} else if (last.path == cv.curr.full) {
					scrTop = last.scrTop;
					open();
				} else {
					location.href = "/view?path=" + encodeURIComponent(last.path) + "#SCRTOP" + last.scrTop;
				}
			}
			
			function open() {
				$(window).scrollTop(scrTop);
				if ($(window).scrollTop() != scrTop) {
					setTimeout(open, 200);
				} else {
					panel.notify("Bookmark opened: " + cv.curr.full);
					history.pushState("", document.title, window.location.pathname + window.location.search);
				}
			}
			
			function createMenu() {
				var bookmarks = read(),
					i;
					
				for (i = 0; i < bookmarks.length; i++) {
					addMenuItem(bookmarks[i]);
				}
			}
			
			function addMenuItem(bookmark) {
				$("<a/>", {
					href: "/view?path=" + encodeURIComponent(bookmark.path) + "#SCRTOP" + bookmark.scrTop,
					text: bookmark.name
				}).prependTo(".bookmark-menu");
			}
			
			function hashOpen() {
				var match;
				if (match = location.hash.match(/^#SCRTOP(\d+)/)) {
					scrTop = match[1];
					open();
				}			
			}
			
			function init() {
				hashOpen();
				createMenu();
				
				$(".command-bookmarks").click(showMenu);
				$(window).on("hashchange", hashOpen);
			}
			
			function showMenu() {
				$(".nav").addClass("show");
				$(".command-bookmarks").addClass("active");
				$(".bookmark-menu").addClass("show");
				setTimeout(bindHideMenu);
			}
			
			function bindHideMenu() {
				$(window).one("click", hideMenu);
			}
			
			function hideMenu() {
				$(".nav").removeClass("show");
				$(".command-bookmarks").removeClass("active");
				$(".bookmark-menu").removeClass("show");
			}
			
			$(init);
		
			return {
				load: load,
				add: add
			};
		}();
		
		function handleKeydown(e) {
			if (e.which == 221) {
				// go next folder "["
				location.href = "/view?path=" + encodeURIComponent(cv.next.full);
			} else if (e.which == 219) {
				// go prev folder "]"
				location.href = "/view?path=" + encodeURIComponent(cv.prev.full);
			} else if (e.which == 81) {
				// go parent dir "Q"
				location.href = "/view?path=" + encodeURIComponent(cv.curr.dir) + "#" + cv.curr.name;
			} else if (e.which == 66) {
				// bookmark "B"
				if (e.shiftKey) {
					bookmark.load();
				} else {
					bookmark.add();
				}
			}
		}
		
		var panel = function(){
			var timer, x, y, hideStyle = $("#hide-cursor-style");
			
			function show(e) {
				var w = $(window).width(),
					scrTop = $(window).scrollTop();
				$("body").addClass("show-cursor");
				hideStyle.remove();
				$(".container-inner, .nav").css("margin-right", $(window).width() - w + "px");
				$(window).scrollTop(scrTop);
				timer = setTimeout(hide, 1000);
			}
			
			function hide() {
				hideStyle.appendTo("head");
				$("body").removeClass("show-cursor");
				$(".container-inner, .nav").css("margin-right", "");
				timer = null;
			}
			
			function handleMove(e) {
				// sometimes e.screenX and e.screenY will be 0
				if (!e.screenX && !e.screenY) {
					return
				}
				if (x == null && y == null) {
					x = e.screenX;
					y = e.screenY;
					return;
				}
				// chrome fires move event even not moving
				if (e.screenX == x && e.screenY == y) {
					return;
				}
				x = e.screenX;
				y = e.screenY;
				if (timer) {
					clearTimeout(timer);
					timer = setTimeout(hide, 1000);
					return;
				}
				show();
			}
			
			var notifyTimer;
			function notify(s) {
				clearTimeout(notifyTimer);
				$(".notify").text(s);
				$(".notify").addClass("show");
				notifyTimer = setTimeout(denotify, 1000);
			}
			
			function denotify() {
				$(".notify").removeClass("show");
			}
		
			return {
				handleMove: handleMove,
				notify: notify
			};
		}();
		
		$(document).keydown(handleKeydown);
		$(document).mousemove(panel.handleMove);
	</script>
</head>
<body>
	<div class="container">
		<div class="container-inner">
			<div class="nav">
				<a class="title main"><%= curr.name %></a>
				<div class="right">
					<a class="command-explorer">Explorer</a>
					<a class="command-bookmarks">Bookmarks</a>
					<div class="bookmark-menu"></div>
				</div>
			</div>
			<div class="images">
				<% files.forEach(function(file){ %>
					<img src="/src?path=<%= encodeURIComponent(file.full) %>" id="<%= file.name %>">
				<% }) %>
			</div>
			<div class="dirs">
				<% dirs.forEach(function(file){ %>
					<a href="/view?path=<%= encodeURIComponent(file.full) %>" id="<%= file.name %>"><%= file.name %></a>
				<% }) %>
			</div>
			<div class="controls">
				<% if (prev) { %>
					<a href="/view?path=<%= encodeURIComponent(prev.full) %>" id="prev" title="<%= prev.name %>">Prev</a>
				<% } %>
				<a href="/view?path=<%= encodeURIComponent(curr.dir) + "#" + curr.name %>" title="<%= curr.dirname %>">..</a>
				<% if (next) { %>
					<a href="/view?path=<%= encodeURIComponent(next.full) %>" id="next" title="<%= next.name %>">Next</a>
				<% } %>
			</div>
		</div>
	</div>
	<div class="layers">
		<div class="notify"></div>
	</div>
</body>
</html>