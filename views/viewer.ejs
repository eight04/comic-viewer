<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title><%= curr.name %></title>
	<style>
		body {
			background: black;
			cursor: none;
			overflow: hidden;
			color: white;
		}
		.images {
			min-height: 3em;
		}
		.container {
			overflow: hidden;
		}
		img {
			display: block;
			margin: 0 auto;
			max-width: 100%;
		}
		.show-cursor {
			cursor: auto;
			overflow: auto;
		}
		a {
			color: white;
			text-decoration: none;
			background-color: #444;
		}
		a:hover,
		a.active {
			background-color: #666;
		}
		.controls {
			text-align: center;
			margin: 1em;
		}
		.controls a {
			display: inline-block;
			padding: 0.3em 0.6em;
		}
		.dirs a {
			display: block;
			padding: 0.3em 0.6em;
			margin: 0.6em 0;
		}
		.nav {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			text-align: center;
			background: #444;
			line-height: 1;
			vertical-align: middle;
		}
		.nav:hover {
			display: block;
		}
		.nav a {
			display: inline-block;
			padding: 1em;
			vertical-align: middle;
		}
		.show-cursor .nav {
			display: block;
		}
		.right {
			position: absolute;
			right: 1em;
			top: 0;
		}
		.right > a {
			float: right;
		}
		.left {
			float: left;
		}
		.notify {
			background: #444;
			padding: 1em;
			position: fixed;
			top: 2em;
			right: 2em;
			width: 16em;
			display: none;
		}
		.bookmark-menu {
			display: none;
			margin-top: 3em;
		}
		.bookmark-menu a {
			display: block;
		}
		.show {
			display: block;
		}
		@supports (-webkit-appearance:none) {
			body {
				overflow: auto;
			}
		}
	</style>
	<style id="hide-cursor-style">
		::-webkit-scrollbar {
			display: none;
		}
	</style>
	<script src="/mousetrap-js/mousetrap.js"></script>
	<script src="/fetchival/index.js"></script>
	<script>
		var cv = <%- comicViewer %>,
			match;
		
		// check isfile
		if (cv.isFile) {
			location.href = "/view?path=" + encodeURIComponent(cv.curr.dir) + "#" + cv.curr.name;
		}
		
		function escape(unsafe) {
			return unsafe
				.replace(/&/g, "&amp;")
				.replace(/</g, "&lt;")
				.replace(/>/g, "&gt;")
				.replace(/"/g, "&quot;")
				.replace(/'/g, "&#039;");
		}
		
		function prepend(node, child) {
			if (typeof node == "string") {
				node = document.querySelector(node);
			}
			if (typeof child == "string") {
				node.insertAdjacentHTML("afterbegin", child);
			} else {
				node.insertBefore(child, node.childeNodes[0]);
			}
		}
		
		function bind(node, event, callback) {
			if (typeof node == "string") {
				node = document.querySelector(node);
			}
			node.addEventListener(event, callback);
		}
		
		bind.one = function(node, event, callback) {
			if (typeof node == "string") {
				node = document.querySelector(node);
			}
			node.addEventListener(event, function self(e) {
				node.removeEventListener(event, self);
				callback.call(this, e);
			});
		}
		
		bind(document, "DOMContentLoaded", init);
		
		function init() {
			var bookmark = function(){
				var MAX_LENGTH = 10,
					scrTop,
					nav, cmd, menu;
				
				function read() {
					var bookmarks;
					try {
						bookmarks = JSON.parse(localStorage.bookmarks);
						if (!(bookmarks instanceof Array)) {
							bookmarks = [];
						}
					} catch (err) {
						bookmarks = [];
					}
					return bookmarks;
				}
				
				function save(bookmarks) {
					while (bookmarks.length > MAX_LENGTH) {
						bookmarks.shift();
					}				
					localStorage.bookmarks = JSON.stringify(bookmarks);
				}
			
				function add() {
					var bookmarks = read(),
						bookmark = {
							path: cv.curr.full,
							scrTop: window.scrollY,
							name: cv.curr.name
						};
					
					bookmarks.push(bookmark);
					addMenuItem(bookmark);
					
					save(bookmarks);
					
					panel.notify("Saved bookmark: " + cv.curr.full);
				}
				
				function load() {
					var bookmarks = read(),
						last = bookmarks[bookmarks.length - 1];
						
					if (!last) {
						panel.notify("Bookmark is empty");
					} else if (last.path == cv.curr.full) {
						scrTop = last.scrTop;
						open();
					} else {
						location.href = "/view?path=" + encodeURIComponent(last.path) + "#SCRTOP" + last.scrTop;
					}
				}
				
				function open() {
					window.scrollTo(window.scrollX, scrTop);
					if (window.scrollY != scrTop) {
						setTimeout(open, 200);
					} else {
						panel.notify("Bookmark opened: " + cv.curr.full);
						history.pushState("", document.title, window.location.pathname + window.location.search);
					}
				}
				
				function createMenu() {
					var bookmarks = read(),
						i;
						
					for (i = 0; i < bookmarks.length; i++) {
						addMenuItem(bookmarks[i]);
					}
				}
				
				function addMenuItem(bookmark) {
					var a = document.createElement("a");
					a.href = "/view?path=" + encodeURIComponent(bookmark.path) + "#SCRTOP" + bookmark.scrTop;
					a.textContent = bookmark.name;
					prepend(menu, a);
				}
				
				function hashOpen() {
					var match;
					if (match = location.hash.match(/^#SCRTOP(\d+)/)) {
						scrTop = match[1];
						open();
					}			
				}
				
				function showMenu() {
					nav.classList.add("show");
					cmd.classList.add("active");
					menu.classList.add("show");
					setTimeout(bindHideMenu);
				}
				
				function bindHideMenu() {
					bind.one(window, "click", hideMenu);
				}
				
				function hideMenu() {
					nav.classList.remove("show");
					cmd.removeClass("active");
					menu.removeClass("show");
				}
				
				cmd = document.querySelector(".command-bookmarks");
				nav = document.querySelector(".nav");
				menu = document.querySelector(".bookmark-menu");
				
				hashOpen();
				createMenu();
				
				bind(cmd, "click", showMenu);
				bind(window, "hashchange", hashOpen);
				
				return {
					load: load,
					add: add
				};
			}();
			
			function go(path, name) {
				path = encodeURIComponent(path);
				name = name ? "#" + name : "";
				return function () {
					location.href = "/view?path=" + path + name;
				};
			}
			
			var scroller = function(){
			
				function nextJump(e) {
					var img = images.current();
					if (img) {
						window.scrollBy(img.height);
					}
				}
				
				function prevJump() {
					var img = images.current();
					if (img && img.prev) {
						window.scrollBy(-img.prev.height);
					}
				}
			
				return {
					nextJump: nextJump,
					prevJump: prevJump
				};
			}();
			
			var images = function(){
			
				function current() {
					var scrTop = window.scrollY,
						top = document.querySelector(".images").getBoundingClientRect().top + scrTop,
						select = [],
						prev = {
							top: null,
							height: null,
							next: null,
							prev: null
						},
						images = document.querySelectorAll(".images img"),
						i, ch;
						
					for (i = 0; i < images.length; i++) {
						ch = images[i].clientHeight;
						if (top + ch <= scrTop) {
							prev.top = top;
							prev.height = ch;
							top += ch;
							continue;
						}
						if (select.length >= 2) {
							break;
						}
						select.push({
							top: top,
							height: ch,
							next: null,
							prev: null
						});
						top += ch;
					}
					
					if (prev.top !== null && select[0]) {
						prev.next = select[0];
						select[0].prev = prev;
					}
					
					if (select[1]) {
						select[0].next = select[1];
						select[1].prev = select[0];
					}
					
					if (select.length <= 1) {
						return select[0];
					}
					if (select[1].top - scrTop > (scrTop + window.innerHeight) - select[1].top) {
						return select[0];
					}
					return select[1];
				}
				
				return {
					current: current
				};
			}();
			
			var panel = function(){
				var timer, x, y,
					hideStyle = document.querySelector("#hide-cursor-style"),
					nav = document.querySelector(".nav"),
					inner = document.querySelector(".container-inner"),
					notifyEl = document.querySelector(".notify");
				
				function show(e) {
					var w = window.innerWidth,
						scrTop = window.scrollY;
						
					document.body.classList.add("show-cursor");
					document.head.removeChild(hideStyle);
					
					var scrW = window.innerWidth - w + "px";				
					nav.style.marginRight = scrW;
					inner.style.marginRight = scrW;
					
					window.scrollTo(window.scrollX, scrTop);
					timer = setTimeout(hide, 1000);
				}
				
				function hide() {
					document.head.appendChild(hideStyle);
					document.body.classList.remove("show-cursor");
					
					inner.style.marginRight = "";
					nav.style.marginRight = "";
					
					timer = null;
				}
				
				function handleMove(e) {
					// sometimes e.screenX and e.screenY will be 0
					if (!e.screenX && !e.screenY) {
						return
					}
					if (x == null && y == null) {
						x = e.screenX;
						y = e.screenY;
						return;
					}
					// chrome fires move event even not moving
					if (e.screenX == x && e.screenY == y) {
						return;
					}
					x = e.screenX;
					y = e.screenY;
					if (timer) {
						clearTimeout(timer);
						timer = setTimeout(hide, 1000);
						return;
					}
					show();
				}
				
				var notifyTimer;
				function notify(s) {
					clearTimeout(notifyTimer);
					notifyEl.textContent = s;
					notifyEl.classList.add("show");
					notifyTimer = setTimeout(denotify, 1000);
				}
				
				function denotify() {
					notifyEl.classList.remove("show");
				}
			
				bind(window, "mousemove", handleMove);
				
				return {
					notify: notify
				};
			}();
			
			var explorer = function(){
				
				function open() {
					fetchival("/open").post({path: encodeURIComponent(cv.isFile ? cv.curr.dir : cv.curr.full)})
					panel.notify("Launch directory");
				}
				
				bind(".command-explorer", "click", open);
				
				return {
					open: open
				};
			}();
			
			Mousetrap.bind("[", go(cv.prev && cv.prev.full));
			Mousetrap.bind("]", go(cv.next && cv.next.full));
			Mousetrap.bind("q", go(cv.curr.dir, cv.curr.name));
			Mousetrap.bind("b", bookmark.add);
			Mousetrap.bind("shift+b", bookmark.load);
			Mousetrap.bind("ctrl+enter", explorer.open);
			Mousetrap.bind("left", scroller.prevJump);
			Mousetrap.bind("right", scroller.nextJump);
			
		}
	</script>
</head>
<body>
	<div class="container">
		<div class="container-inner">
			<div class="nav">
				<a class="title main"><%= curr.name %></a>
				<div class="right">
					<a class="command-explorer">Explorer</a>
					<a class="command-bookmarks">Bookmarks</a>
					<div class="bookmark-menu"></div>
				</div>
			</div>
			<div class="images">
				<% files.forEach(function(file){ 
					if (/\.(jpg|jpeg|png|gif)$/i.test(file.name)) { %>
						<img src="/src?path=<%= encodeURIComponent(file.full) %>" id="<%= file.name %>">
					<% }
				}) %>
			</div>
			<div class="dirs">
				<% dirs.forEach(function(file){ %>
					<a href="/view?path=<%= encodeURIComponent(file.full) %>" id="<%= file.name %>"><%= file.name %></a>
				<% }) %>
			</div>
			<div class="controls">
				<% if (prev) { %>
					<a href="/view?path=<%= encodeURIComponent(prev.full) %>" id="prev" title="<%= prev.name %>">Prev</a>
				<% } %>
				<a href="/view?path=<%= encodeURIComponent(curr.dir) + "#" + curr.name %>" title="<%= curr.dirname %>">..</a>
				<% if (next) { %>
					<a href="/view?path=<%= encodeURIComponent(next.full) %>" id="next" title="<%= next.name %>">Next</a>
				<% } %>
			</div>
		</div>
	</div>
	<div class="layers">
		<div class="notify"></div>
	</div>
</body>
</html>